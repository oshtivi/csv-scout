name: Manual Release

on:
  workflow_dispatch:
    inputs:
      level:
        description: "Release level (patch, minor, major, or exact version like 0.9.1)"
        required: true
        default: "patch"

jobs:
  release:
    name: Cargo Release & GitHub Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install cargo-release
        run: cargo install cargo-release

      - name: Install git-cliff
        run: cargo install git-cliff --locked

      - name: Run cargo release
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
          GIT_AUTHOR_NAME: github-actions
          GIT_AUTHOR_EMAIL: github-actions@users.noreply.github.com
          GIT_COMMITTER_NAME: github-actions
          GIT_COMMITTER_EMAIL: github-actions@users.noreply.github.com
        run: |
          git config user.name "$GIT_AUTHOR_NAME"
          git config user.email "$GIT_AUTHOR_EMAIL"
          cargo release ${{ github.event.inputs.level }} --no-confirm

      - name: Get latest tag
        id: get_tag
        run: echo "tag=$(git describe --tags --abbrev=0)" >> "$GITHUB_OUTPUT"

      - name: Generate release notes with git-cliff
        id: cliff
        run: |
          git cliff --tag ${{ steps.get_tag.outputs.tag }} > RELEASE_NOTES.md
          echo "notes<<EOF" >> "$GITHUB_OUTPUT"
          cat RELEASE_NOTES.md >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_tag.outputs.tag }}
          name: Release ${{ steps.get_tag.outputs.tag }}
          body: ${{ steps.cliff.outputs.notes }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
